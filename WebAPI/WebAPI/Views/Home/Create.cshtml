@model WebAPI.ViewModel.EmployeeVM

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Create</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
</head>
<body>

    <p>
        @Html.ActionLink("Login", "loginEmployee")
    </p>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeeVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control", @id = "Gender" } })Male
                @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control", @id = "Gender" } })Frmale
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignationID, "Designation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Designation", null, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.DesignationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "PhoneNumber" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <label>Profile</label>
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="file" id="FileUpload1" onchange="encodeBase64(this)" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="Submit()" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
<script type="text/javascript">
    var base = base;

    function Submit() {
        debugger;
        var obj = {
            Name: $("#name").val(),
            Gender: $("#Gender:checked").val(),
            Email: $("#Email").val(),
            DesignationID: $("#Designation").val(),
            PhoneNumber: $("#PhoneNumber").val(),
            Password: $("#password").val(),
            Profile: base,

        }

        console.log(obj);

        $.ajax({
            url: 'https://localhost:44363/api/addemployee',
            type: "POST",
            data: obj,
            success: function (data) {
                var redirect = '@Url.Action("Index")';
                window.location.href = redirect;
            }
        });
    }
    function encodeBase64(elm) {
        var file = elm.files[0];
        var imgReader = new FileReader();
        imgReader.onload = function () {
            base = imgReader.result;
        }
        imgReader.readAsDataURL(file);
    }
</script>